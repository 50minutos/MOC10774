USE DB

EXEC sp_tables

GO

CREATE VIEW DBO.UV_PEDIDO_COMPLETO
AS
	SELECT PED.COD_PEDIDO, 
		PED.DATA_PEDIDO, 
		IP.PRECO_ITEM_PEDIDO, 
		IP.QTD_ITEM_PEDIDO, 
		IP.PRECO_ITEM_PEDIDO * IP.QTD_ITEM_PEDIDO 'TOTAL_ITEM_PEDIDO', 
		P.NOME_PRODUTO, 
		CP.NOME_CATEGORIA_PRODUTO
	FROM CATEGORIA_PRODUTO CP
		JOIN PRODUTO P 
			ON CP.COD_CATEGORIA_PRODUTO = P.COD_CATEGORIA_PRODUTO
		JOIN ITEM_PEDIDO IP
			ON P.COD_PRODUTO = IP.COD_PRODUTO
		JOIN PEDIDO PED
			ON PED.COD_PEDIDO = IP.COD_PEDIDO
GO

SELECT * 
FROM UV_PEDIDO_COMPLETO
WHERE COD_PEDIDO = 1

GO

--CREATE VIEW #VIEW
--AS
--	SELECT GETDATE() AS DATA
--GO

GO

CREATE LOGIN CHICO
WITH PASSWORD = 'ABC123@'

CREATE USER CHICO 
FROM LOGIN CHICO

GRANT SELECT 
ON DBO.UV_PEDIDO_COMPLETO
TO CHICO

DENY SELECT, INSERT, UPDATE, DELETE 
ON DBO.PEDIDO
TO CHICO

DENY SELECT, INSERT, UPDATE, DELETE 
ON DBO.ITEM_PEDIDO
TO CHICO

DENY SELECT, INSERT, UPDATE, DELETE 
ON DBO.PRODUTO
TO CHICO

DENY SELECT, INSERT, UPDATE, DELETE 
ON DBO.CATEGORIA_PRODUTO
TO CHICO

--PARA TESTAR, ABRIR OUTRA JANELA LOGANDO COMO CHICO

USE DB

SELECT * 
FROM DBO.UV_PEDIDO_COMPLETO

SELECT *
FROM PEDIDO

--VOLTAR PARA ESTA JANELA

--TVF - TABLE VALUED FUNCTION

GO

CREATE FUNCTION DBO.UDF_PEDIDO_COMPLETO
(
	@COD_PEDIDO INT
)
RETURNS TABLE
AS
	RETURN
	SELECT PED.COD_PEDIDO, 
		PED.DATA_PEDIDO, 
		IP.PRECO_ITEM_PEDIDO, 
		IP.QTD_ITEM_PEDIDO, 
		IP.PRECO_ITEM_PEDIDO * IP.QTD_ITEM_PEDIDO 'TOTAL_ITEM_PEDIDO', 
		P.NOME_PRODUTO, 
		CP.NOME_CATEGORIA_PRODUTO
	FROM CATEGORIA_PRODUTO CP
		JOIN PRODUTO P 
			ON CP.COD_CATEGORIA_PRODUTO = P.COD_CATEGORIA_PRODUTO
		JOIN ITEM_PEDIDO IP
			ON P.COD_PRODUTO = IP.COD_PRODUTO
		JOIN PEDIDO PED
			ON PED.COD_PEDIDO = IP.COD_PEDIDO
	WHERE PED.COD_PEDIDO = @COD_PEDIDO
GO

SELECT *
FROM UDF_PEDIDO_COMPLETO(1)

CREATE TABLE TABELA
(
    ID INT IDENTITY, 
    DATA DATE, 
    VALOR DEC(9,2), 
    CONTRATO INT
)
 
INSERT INTO TABELA
VALUES ('20130501', 1000, 1), 
    ('20121212', 2000, 2), 
    ('20130601', 2500, 1), 
    ('20130101', 3000, 2), 
    ('20130401', 4600, 1), 
    ('20130513', 5000, 3)

SELECT T.*
FROM TABELA T
JOIN (
		SELECT CONTRATO, MAX(DATA) AS 'MAIOR_DATA'
		FROM TABELA
		GROUP BY CONTRATO
	) X
	ON T.DATA = X.MAIOR_DATA
WHERE X.CONTRATO = T.CONTRATO

;WITH DADOS AS 
(
    SELECT *, 
        ROW_NUMBER() 
		OVER (PARTITION BY CONTRATO ORDER BY DATA DESC) AS NUMERO 
    FROM TABELA
)
SELECT *
FROM DADOS 
WHERE NUMERO = 1 

CREATE TABLE FUNC
(
	COD_FUNC INT IDENTITY, 
	NOME_FUNC VARCHAR(50), 
	COD_GER INT
)

INSERT FUNC 
VALUES ('GERENTE A', NULL), 
	('FUNC A', 1), 
	('FUNC B', 1), 
	('GERENTE B', NULL)

SELECT F.NOME_FUNC AS 'FUNC', 
	G.NOME_FUNC AS 'GER'
FROM FUNC F
LEFT JOIN FUNC G
	ON F.COD_GER = G.COD_FUNC

CREATE TABLE FUNCIONARIO
(
	COD INT IDENTITY NOT NULL PRIMARY KEY,
	NOME VARCHAR(50),
	COD_SUPERIOR INT REFERENCES FUNCIONARIO
)

INSERT FUNCIONARIO 
VALUES (NULL, NULL), 
	(NULL, 1), 
	(NULL, 1),
	(NULL, 2),
	(NULL, 3),
	(NULL, 4),
	(NULL, 5),
	(NULL, NULL),
	(NULL, 7),
	(NULL, 8),
	(NULL, 5),
	(NULL, 6),
	(NULL, 5),
	(NULL, 5),
	(NULL, 12),
	(NULL, 12),
	(NULL, 14),
	(NULL, 15)

UPDATE FUNCIONARIO
SET NOME = 'FUNCIONARIO ' 
	+ CAST(COD AS VARCHAR)
WHERE COD_SUPERIOR IS NULL

SELECT *
FROM FUNCIONARIO

UPDATE FUNCIONARIO
SET NOME = 'FUNCIONARIO ' 
	+ CAST(COD AS VARCHAR)
	+ ' SUBORDINADO AO ' 
	+ CAST(COD_SUPERIOR AS VARCHAR)
WHERE COD_SUPERIOR IS NOT NULL

SELECT *
FROM FUNCIONARIO

;WITH FUNCS(COD, NOME, SUP, HIERARQUIA, NIVEL)
AS
(
	SELECT *,
	CONVERT(VARCHAR(MAX), COD),
	1
	FROM FUNCIONARIO
	WHERE COD_SUPERIOR IS NULL
	UNION ALL
	SELECT F.*, 
		FUNCS.HIERARQUIA 
			+ ' - ' 
			+ CONVERT(VARCHAR, F.COD), 
		FUNCS.NIVEL+1
	FROM FUNCIONARIO F
	INNER JOIN FUNCS ON F.COD_SUPERIOR = FUNCS.COD
)
SELECT * 
FROM FUNCS
ORDER BY HIERARQUIA
