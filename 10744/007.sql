USE DB

SELECT * 
FROM CIDADE
WHERE NOME_CIDADE = N'SAO PAULO'

SELECT * 
FROM CIDADE
WHERE CONVERT(NVARCHAR(50), NOME_CIDADE) = N'SAO PAULO'

SELECT * 
FROM CIDADE
WHERE NOME_CIDADE = 'SAO PAULO'

USE AdventureWorks2012

SELECT *
FROM Sales.SalesOrderHeader
WHERE OrderDate = '19990101'

EXEC sp_help 'Sales.SalesOrderHeader'

SELECT GETDATE(), 
	CONVERT(VARCHAR/*(20)*/, GETDATE(), 3),
	CONVERT(VARCHAR/*(20)*/, GETDATE(), 103), 
	CONVERT(VARCHAR/*(20)*/, GETDATE(), 108) 

SELECT CONVERT(DATE, '19660912'), 
	CONVERT(DATETIME, '19660912'), 
	CONVERT(DATETIME2, '19660912') 

SELECT CAST('19660912' AS DATE)

--SELECT CAST('BATATINHA' AS INT)

-------------------------------------------
--PARSE
-------------------------------------------

SELECT PARSE('102.243' AS DEC(9,2)),
	PARSE('102.247' AS DEC(9,2))

SELECT PARSE('2/20/13' AS DATE), 
	PARSE('2/20/13' AS DATETIME), 
	PARSE('20/FEB/2013 09:10:20' AS DATETIME)

--SELECT PARSE('ERRO' AS INT)

DECLARE @I INT = PARSE('1209' AS INT)
SELECT @I

-------------------------------------------
--TRYPARSE
-------------------------------------------

SELECT TRY_PARSE('102.243' AS DEC(9,2)),
	TRY_PARSE('102.247' AS DEC(9,2))

SELECT TRY_PARSE('2/20/13' AS DATE), 
	TRY_PARSE('2/20/13' AS DATETIME), 
	TRY_PARSE('20/FEB/2013 09:10:20' AS DATETIME)

SELECT TRY_PARSE('AGORA É NULL' AS INT)

DECLARE @J INT = TRY_PARSE('12/9' AS INT)
SELECT @J

-------------------------------------------
--TRYCONVERT
-------------------------------------------

SELECT TRY_CONVERT(INT, '435'), 
	TRY_CONVERT(INT, '435.35'), 
	TRY_CONVERT(INT, TRY_CONVERT(DEC(9,2), '435.35')), 
	TRY_CONVERT(VARCHAR, 435.35), 
	TRY_CONVERT(DATETIME, '3/20/2013 09:10:20'), 
	TRY_CONVERT(XML, '<numero>435.35</numero>'), 
	TRY_CONVERT(XML, 'QUALQUER COISA')
	
--SELECT TRY_CONVERT(XML, GETDATE()) 

--SELECT TRY_CONVERT(XML, 1)

EXEC sp_helpsort

SELECT * 
FROM ::FN_HELPCOLLATIONS()

CREATE TABLE LOGIN
(
	USUARIO VARCHAR(10), 
	SENHA VARCHAR(10), 

	UNIQUE(USUARIO, SENHA)
)

EXEC sp_help LOGIN

INSERT LOGIN
VALUES ('ANA', 'MARIA')

SELECT *
FROM LOGIN
WHERE USUARIO = 'ana'
	AND SENHA = 'MARIA'

DROP TABLE LOGIN

CREATE TABLE LOGIN
(
	USUARIO VARCHAR(10) COLLATE LATIN1_GENERAL_CS_AS, 
	SENHA VARCHAR(10) COLLATE LATIN1_GENERAL_CS_AS, 

	UNIQUE(USUARIO, SENHA)
)

EXEC sp_help LOGIN

INSERT LOGIN
VALUES ('ANA', 'MARIA')

SELECT *
FROM LOGIN
WHERE USUARIO = 'ana'
	AND SENHA = 'MARIA'

SELECT 'O AGNALDO TEM ' 
	+ CONVERT(VARCHAR, 46)
	+ ' ANOS'

SELECT CONCAT('O AGNALDO TEM ', 46, ' ANOS E AGORA É: ', GETDATE())

SELECT CONCAT('HOJE É ', GETDATE(), ' E EU SOU O USUÁRIO ', SUSER_SNAME())

SELECT CONCAT('O VALOR DE PI É ', PI())

SELECT CONCAT(123, 456.789)

USE DB

SELECT FORMAT(1010.345, 'C', 'pt-BR'), 
	FORMAT(1010.456, 'N', 'pt-BR'), 
	FORMAT(1010.345, 'C', 'en-US'), 
	FORMAT(1010.456, 'N', 'en-US'), 
	FORMAT(1010.345, 'C', 'es-ES'), 
	FORMAT(1010.456, 'N', 'es-ES')

SELECT FORMAT(GETDATE(), 'd', 'pt-BR'), 
	FORMAT(GETDATE(), 'd', 'en-US'), 
	FORMAT(GETDATE(), 'd', 'es-ES'), 
	FORMAT(GETDATE(), 'D', 'pt-BR'), 
	FORMAT(GETDATE(), 'D', 'en-US'), 
	FORMAT(GETDATE(), 'D', 'es-ES')

SELECT FORMAT(4010100, '00000-000'), 
	FORMAT(123432.236, '000,000,000.00'),
	FORMAT(123432.236, '#,##0.00'), 
	FORMAT(123432.236, '#,##0.00', 'pt-BR') 

----------------------------------
--TIPOS DE DADOS
----------------------------------

SELECT CONVERT(TIME, GETDATE()) AS 'TIME', 
	CONVERT(TIME, GETUTCDATE()) AS 'TIME_UTC', 
	CONVERT(DATE, GETDATE()) AS 'DATE', 
	CONVERT(SMALLDATETIME, GETDATE()) AS 'SMALLDATETIME', 
	GETDATE() AS 'DATETIME', 
	CONVERT(DATETIME2, SYSDATETIME()) AS 'DATETIME2', 
	CONVERT(DATETIME2, SYSUTCDATETIME()) AS 'DATETIME2_UTC', 
	SYSDATETIMEOFFSET() AS 'DATETIMEOFFSET'

----------------------------------
--EXTRAIR PARTE OU NOME
----------------------------------

SELECT DATENAME(MM, GETDATE()) AS MES,
	DATENAME(DW, GETDATE()) AS DIA_DA_SEMANA

SELECT DATEPART(YY, SYSDATETIME()) AS ANO,
	DATEPART(M, SYSDATETIME()) AS MES,
	DATEPART(D, SYSDATETIME()) AS DIA,
	DATEPART(HH, SYSDATETIME()) AS HORA,
	DATEPART(N, SYSDATETIME()) AS MINUTO,
	DATEPART(S, SYSDATETIME()) AS SEGUNDO,
	DATEPART(MS, SYSDATETIME()) AS MILISSEGUNDO,
	DATEPART(MCS, SYSDATETIME()) AS MICROSSEGUNDO,
	DATEPART(NS, SYSDATETIME()) AS NANOSSEGUNDO,
	DATEPART(Q, SYSDATETIME()) AS TRIMESTRE,
	DATEPART(ISOWK, SYSDATETIME()) AS SEMANA,
	DATEPART(DY, SYSDATETIME()) AS DIA_DO_ANO, 
	DATEPART(DW, SYSDATETIME()) AS DIA_DA_SEMANA 

----------------------------------
--CRIAR DATA/HORA
----------------------------------

SELECT TIMEFROMPARTS(9, 10, 11, 1, 7) AS TIME, 
	DATEFROMPARTS(2013, 2, 20) AS DATE, 
	SMALLDATETIMEFROMPARTS(2013, 2, 20, 9, 10) AS SMALLDATETIME, 
	DATETIMEFROMPARTS(2013, 2, 20, 9, 10, 11, 1) AS DATETIME, 
	DATETIME2FROMPARTS(2013, 2, 20, 9, 10, 11, 1, 7) AS DATETIME2, 
	DATETIMEOFFSETFROMPARTS(2013, 2, 20, 9, 10, 11, 1, -3, 0, 7) AS DATETIMEOFFSET

----------------------------------
--DIFERENÇA ENTRE DATAS
----------------------------------

SELECT 
	DATEDIFF(YY, DATEFROMPARTS(1966, 9, 12), GETDATE()), 
	DATEDIFF(MM, DATEFROMPARTS(1966, 9, 12), GETDATE()), 
	DATEDIFF(DD, DATEFROMPARTS(1966, 9, 12), GETDATE())

----------------------------------
--MANIPULAÇÃO DE DATAS
----------------------------------

SELECT 
	EOMONTH(GETDATE(), -1) AS ANTERIOR, 
	EOMONTH(GETDATE(), 0) AS ATUAL, 
	EOMONTH(GETDATE(), 1) AS PROXIMO 

DECLARE @D DATETIMEOFFSET = SYSDATETIMEOFFSET()

SELECT
	@D, 
	SWITCHOFFSET(@D, '-01:00'), 
	SWITCHOFFSET(@D, '+00:00'), 
	SWITCHOFFSET(@D, '+03:00')

DECLARE @HOJE DATETIME2 = GETDATE()

SELECT 
	@HOJE, 
	TODATETIMEOFFSET (@HOJE, -60), 
	TODATETIMEOFFSET (@HOJE, -120), 
	TODATETIMEOFFSET (@HOJE, '-03:00') 

----------------------------------
--GET/SET SESSION FORMAT
----------------------------------

SELECT 
	@@DATEFIRST, 
	DATEPART(DW, GETDATE())

SET DATEFIRST 2

SELECT 
	@@DATEFIRST, 
	DATEPART(DW, GETDATE())

SET DATEFIRST 7

SET DATEFORMAT DMY

SELECT CONVERT(DATETIME, '12/02/2013')

SET DATEFORMAT MDY

SELECT CONVERT(DATETIME, '12/02/2013')

SELECT @@LANGUAGE

EXEC sp_helplanguage

SET LANGUAGE 'Brazilian'

SELECT 1/0

SELECT CONVERT(DATETIME, '12/02/2013')

SELECT DATENAME(DW, GETDATE())

SET LANGUAGE US_ENGLISH

SELECT ISDATE(GETDATE()), ISDATE('BATATINHA')

CREATE TABLE DBO.PESSOA
(
    ID_PESSOA INT PRIMARY KEY IDENTITY, 
	NOME_PESSOA VARCHAR(50), 
	SEXO_PESSOA CHAR(1)
)

INSERT DBO.PESSOA 
VALUES  ('ADÃO', 'M'), 
	('EVA', 'F'), 
	('COBRA', '?'), 
	('DERCY', NULL)

SELECT ID_PESSOA, 
	NOME_PESSOA, 
	IIF(SEXO_PESSOA = 'M', 'MASCULINO', IIF(SEXO_PESSOA = 'F', 'FEMININO', 'NÃO DEFINIDO')) AS SEXO_PESSOA
FROM DBO.PESSOA

SELECT ID_PESSOA, 
	CHOOSE(ID_PESSOA % 2 + 1, 'PAR', 'ÍMPAR')
FROM PESSOA

SELECT CHOOSE(DATEPART(DW, GETDATE()), 'DOM', 'SEG', 'TER', 'QUA', 'QUI', 'SEX', 'SÁB')

CREATE TABLE FUNCIONARIO
(
	HIERARQUIA HIERARCHYID,
	ID_FUNCIONARIO INT,
	NOME_FUNCIONARIO VARCHAR(50),
)

INSERT INTO FUNCIONARIO
VALUES (CAST('/' AS HIERARCHYID), 
	1, 
	'ADÃO') 

SELECT * 
FROM FUNCIONARIO
 
INSERT FUNCIONARIO
VALUES (CAST('/1/' AS HIERARCHYID), 
	2, 
	'CAIM') 

INSERT FUNCIONARIO
VALUES (CAST('/2/' AS HIERARCHYID), 
	3, 
	'ABEL') 

SELECT CAST(HIERARQUIA AS VARCHAR(50)) AS 'HIERARQUIA', 
	* 
FROM FUNCIONARIO
 
INSERT FUNCIONARIO
VALUES (CAST('/1/1/' AS HIERARCHYID), 
	4, 
	'ENOQUE') 

SELECT CAST(HIERARQUIA AS VARCHAR(50)) AS 'HIERARQUIA', 
	*
FROM FUNCIONARIO

DROP TABLE CLIENTE

CREATE TABLE CLIENTE
(
	COD_CLIENTE INT IDENTITY, 
	RS_CLIENTE VARCHAR(50), --RAZAO SOCIAL 
	MF_CLIENTE VARCHAR(50) --MARCA FANTASIA
)

INSERT CLIENTE
VALUES ('JOAQUIM DA SILVA ME', 'PADOCA'), 
	('50MINUTOS TREINAMENTOS EM TECNOLOGIA LTDA', '50MINUTOS'), 
	('MOTEL ABC LTDA', NULL)

SELECT * 
FROM CLIENTE

SELECT COD_CLIENTE, 
	RS_CLIENTE, 
	ISNULL(MF_CLIENTE, 'NÃO INFORMADO') AS 'MF_CLIENTE'
FROM CLIENTE

SELECT COD_CLIENTE, 
	COALESCE(MF_CLIENTE, RS_CLIENTE) AS 'CLIENTE'
FROM CLIENTE

CREATE TABLE GEOMETRIA
(
	CAMPO GEOMETRY
)

INSERT GEOMETRIA
VALUES (GEOMETRY::STGeomFromText('LINESTRING (100 100, 20 180, 180 180, 100 100)', 0));

INSERT GEOMETRIA
VALUES (GEOMETRY::STGeomFromText('POLYGON ((0 0, 150 0, 150 150, 0 150, 0 0))', 0));

INSERT GEOMETRIA
VALUES ('POLYGON ((25 -20, 0 10, -25 -20, 25 -20))')

SELECT * 
FROM GEOMETRIA

CREATE TABLE VARIANT
(
	CAMPO SQL_VARIANT
)

INSERT VARIANT
VALUES (CAST(123.4567 as decimal(8,2)))

INSERT VARIANT 
VALUES (123.4567)

INSERT VARIANT 
VALUES (CAST(123 AS int))

INSERT VARIANT 
VALUES (CAST('PALAVRA' AS char(10)))

INSERT VARIANT 
VALUES ('PALAVRA')

INSERT VARIANT 
VALUES (CAST(GETDATE() AS smalldatetime))

INSERT VARIANT 
VALUES (CAST('SENHA' AS binary))

SELECT * 
FROM VARIANT

SELECT *, 
	SQL_VARIANT_PROPERTY(CAMPO, 'BASETYPE') AS 'BASETYPE',
	SQL_VARIANT_PROPERTY(CAMPO, 'MAXLENGTH') AS 'MAXLENGTH',
	SQL_VARIANT_PROPERTY(CAMPO, 'PRECISION') AS 'PRECISION',
	SQL_VARIANT_PROPERTY(CAMPO, 'SCALE') AS 'SCALE',
	SQL_VARIANT_PROPERTY(CAMPO, 'TOTALBYTES') AS 'TOTALBYTES',
	SQL_VARIANT_PROPERTY(CAMPO, 'COLLATION') AS 'COLLATION'
FROM VARIANT

SELECT * 
FROM SYS.tables

SELECT * 
FROM PRODUTO
WHERE NOME_PRODUTO LIKE '[^ABCDE]%'

SELECT CURRENT_TIMESTAMP, 
	GETDATE()

SELECT *
FROM PRODUTO
FOR XML AUTO

EXEC sp_help CLIENTE

ALTER TABLE CLIENTE
ADD OBS_CLIENTE XML

SELECT *
FROM CLIENTE

UPDATE CLIENTE
SET OBS_CLIENTE = '<CNPJ>11.222.333/0001-44</CNPJ>'
WHERE COD_CLIENTE = 1

UPDATE CLIENTE
SET OBS_CLIENTE = '<CNPJ>99.222.333/0001-00</CNPJ><IE>ISENTO</IE>'
WHERE COD_CLIENTE = 2

SELECT *
FROM CLIENTE

SELECT @@VERSION

DBCC INPUTBUFFER(53)

DBCC OUTPUTBUFFER(53)

CREATE TABLE PRODUTO_CS_AS
(
	COD_PRODUTO INT IDENTITY, 
	NOME_PRODUTO VARCHAR(50) COLLATE LATIN1_GENERAL_CS_AS
)

CREATE TABLE PRODUTO_CI_AI
(
	COD_PRODUTO INT IDENTITY, 
	NOME_PRODUTO VARCHAR(50) COLLATE LATIN1_GENERAL_CI_AI
)

INSERT PRODUTO_CS_AS
VALUES ('AÇÚCAR'), 
	('ACUCAR'), 
	('acucar')

INSERT PRODUTO_CI_AI
VALUES ('AÇÚCAR'), 
	('ACUCAR'), 
	('acucar')

SELECT * 
FROM PRODUTO_CS_AS
WHERE NOME_PRODUTO = 'ACUCAR'

SELECT * 
FROM PRODUTO_CI_AI
WHERE NOME_PRODUTO = 'ACUCAR'

SELECT *
FROM PRODUTO_CS_AS PS
JOIN PRODUTO_CI_AI PI
	ON PS.NOME_PRODUTO = PI.NOME_PRODUTO COLLATE LATIN1_GENERAL_CS_AS

SELECT *
FROM PRODUTO_CS_AS PS
JOIN PRODUTO_CI_AI PI
	ON PS.NOME_PRODUTO COLLATE LATIN1_GENERAL_CI_AI = PI.NOME_PRODUTO 

