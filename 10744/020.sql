USE MASTER

IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME='DB')
	DROP DATABASE DB

CREATE DATABASE DB
GO

USE DB

CREATE TABLE PESSOA
(
    ID_PESSOA INT IDENTITY, 
	NOME_PESSOA VARCHAR(50), 
	SEXO_PESSOA CHAR(1)
)

INSERT PESSOA
VALUES ('ADÃO', 'M'), 
	('EVA', 'F'), 
	('CAIM', 'M'), 
	('ABEL', 'M')

--TODOS SERÃO TABLE SCAN

SELECT *
FROM PESSOA

SELECT NOME_PESSOA
FROM PESSOA

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ'

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE ID_PESSOA = 1

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE NOME_PESSOA = 'TIÃO MEDONHO'

SELECT *
FROM PESSOA 
WHERE ID_PESSOA = 1

SELECT *
FROM PESSOA 
WHERE NOME_PESSOA = 'ANA BANANA'

SELECT TOP 1 *
FROM PESSOA 
ORDER BY NOME_PESSOA

SELECT TOP 1 *
FROM PESSOA 
ORDER BY ID_PESSOA DESC

EXEC SP_HELP PESSOA

SELECT * 
FROM SYS.TABLES

SELECT *
FROM SYS.indexes
WHERE OBJECT_ID = OBJECT_ID('PESSOA')

CREATE NONCLUSTERED INDEX IDX_PESSOA_NOME_PESSOA 
ON PESSOA(NOME_PESSOA)

SELECT *
FROM PESSOA
--TABLE SCAN

SELECT NOME_PESSOA
FROM PESSOA
--INDEX SCAN
/*
	TABELA ID + NOME
	INDICE NOME
*/

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ'
--INDEX SEEK

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA COLLATE LATIN1_GENERAL_CI_AI = 'ZÉ'
--INDEX SCAN + ALERT

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
--TABLE SCAN

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE ID_PESSOA = 1
--TABLE SCAN

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE NOME_PESSOA = 'TIÃO MEDONHO'
--TABLE SCAN
--INDEX SEEK + LOOKUP

SELECT *
FROM PESSOA 
WHERE ID_PESSOA = 1
--TABLE SCAN

SELECT *
FROM PESSOA 
WHERE NOME_PESSOA = 'ANA BANANA'
--TABLE SCAN

SELECT TOP 1 *
FROM PESSOA 
ORDER BY NOME_PESSOA
-- INDEX SCAN + RID LOOKUP, NESTED LOOPS, TOP

SELECT TOP 1 NOME_PESSOA
FROM PESSOA 
ORDER BY NOME_PESSOA
--INDEX SCAN, TOP

SELECT MIN(NOME_PESSOA)
FROM PESSOA
--INDEX SCAN, TOP, STREAM AGGREGATE

SELECT TOP 1 *
FROM PESSOA 
ORDER BY ID_PESSOA DESC
--TABLE SCAN + SORT

EXEC sp_help PESSOA

SELECT * 
FROM SYS.tables

SELECT * 
FROM SYS.indexes
WHERE OBJECT_ID = OBJECT_ID('PESSOA')

CREATE NONCLUSTERED INDEX IDX_PESSOA_NOME_PESSOA_INCLUDE
ON PESSOA (NOME_PESSOA)
INCLUDE (ID_PESSOA, SEXO_PESSOA)

SELECT *
FROM PESSOA
--INDEX SCAN (INCLUDE) 

SELECT NOME_PESSOA
FROM PESSOA 
--INDEX SCAN (INCLUDE)

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ' 
--INDEX SEEK (INCLUDE)

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA COLLATE LATIN1_GENERAL_CI_AI = 'ZÉ'
--INDEX SCAN (INCLUDE) + ALERT

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
--INDEX SCAN (INCLUDE)

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE ID_PESSOA = 1
--INDEX SCAN (INCLUDE)

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE NOME_PESSOA = 'TIÃO MEDONHO'
--INDEX SEEK (INCLUDE)

SELECT *
FROM PESSOA 
WHERE ID_PESSOA = 1
--INDEX SCAN (INCLUDE)

SELECT *
FROM PESSOA 
WHERE NOME_PESSOA = 'ANA BANANA'
--INDEX SEEK (INCLUDE)

SELECT TOP 1 *
FROM PESSOA 
ORDER BY NOME_PESSOA
-- INDEX SCAN (INCLUDE), TOP

SELECT TOP 1 NOME_PESSOA
FROM PESSOA 
ORDER BY NOME_PESSOA
--INDEX SCAN (INCLUDE), TOP

SELECT MIN(NOME_PESSOA)
FROM PESSOA
--INDEX SCAN (INCLUDE), TOP, STREAM AGGREGATE

SELECT TOP 1 *
FROM PESSOA 
ORDER BY ID_PESSOA DESC
--INDEX SCAN (INCLUDE) + SORT

DROP INDEX PESSOA.IDX_PESSOA_NOME_PESSOA

CREATE CLUSTERED INDEX IDX_PESSOA_ID_PESSOA
ON PESSOA(ID_PESSOA)

EXEC sp_helpindex PESSOA

SELECT *
FROM SYS.indexes 
WHERE OBJECT_ID = OBJECT_ID('PESSOA')

SELECT *
FROM PESSOA
--INDEX SCAN (INCLUDE) 

SELECT NOME_PESSOA
FROM PESSOA 
--INDEX SCAN (INCLUDE)

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ' 
--INDEX SEEK (INCLUDE)

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA COLLATE LATIN1_GENERAL_CI_AI = 'ZÉ'
--INDEX SCAN (INCLUDE) + ALERT

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
--INDEX SCAN (INCLUDE)

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE NOME_PESSOA = 'TIÃO MEDONHO'
--INDEX SEEK (INCLUDE)

SELECT *
FROM PESSOA 
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT *
FROM PESSOA 
WHERE NOME_PESSOA = 'ANA BANANA'
--INDEX SEEK (INCLUDE)

SELECT TOP 1 *
FROM PESSOA 
ORDER BY NOME_PESSOA
-- INDEX SCAN (INCLUDE), TOP

SELECT TOP 1 NOME_PESSOA
FROM PESSOA 
ORDER BY NOME_PESSOA
--INDEX SCAN (INCLUDE), TOP

SELECT MIN(NOME_PESSOA)
FROM PESSOA
--INDEX SCAN (INCLUDE), TOP, STREAM AGGREGATE

SELECT TOP 1 *
FROM PESSOA 
ORDER BY ID_PESSOA DESC
--CLUSTERED INDEX SCAN (INCLUDE) + TOP

DROP INDEX PESSOA.IDX_PESSOA_NOME_PESSOA_INCLUDE

CREATE INDEX IDX_PESSOA_NOME_PESSOA
ON PESSOA(NOME_PESSOA)

SELECT *
FROM PESSOA
--CLUSTERED INDEX SCAN 

SELECT NOME_PESSOA
FROM PESSOA 
--INDEX SCAN 

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ' 
--INDEX SEEK 

SELECT NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA COLLATE LATIN1_GENERAL_CI_AI = 'ZÉ'
--INDEX SCAN + ALERT

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
--INDEX SCAN
/*
	QUANDO HEAP:
		O ÍNDICE NONCLUSTERED ARMAZENA (OCULTO) O RID
	QUANDO CLUSTERED:
		O ÍNDICE NONCLUSTERED ARMAZENA (OCULTA) A CHAVE DO ÍNDICE CLUSTERED
*/

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA
WHERE NOME_PESSOA = 'TIÃO MEDONHO'
--INDEX SEEK
 
SELECT *
FROM PESSOA 
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT *
FROM PESSOA 
WHERE NOME_PESSOA = 'ANA BANANA'
--CLUSTERED INDEX SCAN
--INDEX SEEK + KEY LOOKUP

SELECT TOP 1 *
FROM PESSOA 
ORDER BY NOME_PESSOA
-- INDEX SCAN, TOP

SELECT TOP 1 NOME_PESSOA
FROM PESSOA 
ORDER BY NOME_PESSOA
--INDEX SCAN, TOP

SELECT MIN(NOME_PESSOA)
FROM PESSOA
--INDEX SCAN, TOP, STREAM AGGREGATE

SELECT TOP 1 *
FROM PESSOA 
ORDER BY ID_PESSOA DESC
--CLUSTERED INDEX SCAN + TOP

DROP INDEX PESSOA.IDX_PESSOA_NOME_PESSOA

CREATE INDEX IDX_PESSOA_NOME_PESSOA
ON PESSOA(ID_PESSOA, NOME_PESSOA)

SELECT * 
FROM PESSOA
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA 
WHERE ID_PESSOA = 1
--INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ'
--INDEX SCAN

DROP INDEX PESSOA.IDX_PESSOA_NOME_PESSOA

CREATE INDEX IDX_PESSOA_NOME_PESSOA
ON PESSOA(NOME_PESSOA, ID_PESSOA)

SELECT * 
FROM PESSOA
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA 
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ'
--INDEX SEEK

--LIMPAR CACHE

DBCC DROPCLEANBUFFERS
DBCC FREEPROCCACHE

SELECT * 
FROM PESSOA
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA 
WHERE ID_PESSOA = 1
--CLUSTERED INDEX SEEK

SELECT ID_PESSOA, 
	NOME_PESSOA
FROM PESSOA 
WHERE NOME_PESSOA = 'ZÉ'
--INDEX SEEK

--2008R2-: EXEC SP_DBOPTION 

USE MASTER

ALTER DATABASE DB 
SET AUTO_CREATE_STATISTICS ON 
WITH NO_WAIT

GO

ALTER DATABASE DB 
SET AUTO_UPDATE_STATISTICS ON 
WITH NO_WAIT

GO

ALTER DATABASE DB 
SET AUTO_UPDATE_STATISTICS_ASYNC ON
WITH NO_WAIT

GO

USE DB

SELECT * 
FROM PESSOA

DECLARE @ID_PESSOA INT
DECLARE @NOME_PESSOA VARCHAR(50)
DECLARE @SEXO_PESSOA CHAR(1)

DECLARE X CURSOR FAST_FORWARD
FOR SELECT * FROM PESSOA

OPEN X

FETCH NEXT FROM X INTO @ID_PESSOA, @NOME_PESSOA, @SEXO_PESSOA

WHILE @@FETCH_STATUS = 0
BEGIN
	SELECT @ID_PESSOA, @NOME_PESSOA, @SEXO_PESSOA

	FETCH NEXT FROM X INTO @ID_PESSOA, @NOME_PESSOA, @SEXO_PESSOA
END

CLOSE X
DEALLOCATE X

CREATE TABLE LOG
(
	DATA_LOG DATETIME DEFAULT GETDATE(), 
	MAQUINA_LOG SYSNAME DEFAULT HOST_NAME(), 
	LOGIN_LOG SYSNAME DEFAULT SUSER_SNAME(), 
	USUARIO_LOG SYSNAME DEFAULT USER_NAME(), 
	PROGRAMA_LOG SYSNAME DEFAULT APP_NAME(), 
	TABELA SYSNAME, 
	ACAO CHAR(1), -- I U D
	OBS VARCHAR(MAX)
)

GO

CREATE TRIGGER UTR_PESSOA_INS
ON PESSOA
FOR INSERT
AS
	INSERT LOG (TABELA, ACAO, OBS)
	SELECT 'PESSOA', 
		'I', 
		CONCAT(ID_PESSOA, '|', NOME_PESSOA, '|', SEXO_PESSOA)
	FROM inserted
GO

INSERT PESSOA
VALUES ('EPAMINONDAS', 'M')

INSERT PESSOA 
VALUES ('CHICO', 'M'), 
	('CHICA', 'F')

SELECT * 
FROM LOG

GO

CREATE TRIGGER UTR_PESSOA_DEL
ON PESSOA
FOR DELETE
AS
	INSERT LOG (TABELA, ACAO, OBS)
	SELECT 'PESSOA', 
		'D', 
		CONCAT(ID_PESSOA, '|', NOME_PESSOA, '|', SEXO_PESSOA)
	FROM deleted
GO

SELECT *
FROM PESSOA

DELETE PESSOA
WHERE ID_PESSOA = 5

DELETE PESSOA 
WHERE ID_PESSOA >= 6

SELECT * 
FROM LOG

GO

CREATE TRIGGER UTR_PESSOA_UPD
ON PESSOA
FOR UPDATE
AS
	INSERT LOG (TABELA, ACAO, OBS)
	SELECT 'PESSOA', 
		'U', 
		CONCAT(D.ID_PESSOA, '|', D.NOME_PESSOA, '->', I.NOME_PESSOA, '|', D.SEXO_PESSOA, '->', I.SEXO_PESSOA)
	FROM inserted I
	JOIN deleted D
		ON I.ID_PESSOA = D.ID_PESSOA
GO

SELECT *
FROM PESSOA

UPDATE PESSOA
SET NOME_PESSOA = 'ABELARDO'
WHERE NOME_PESSOA = 'ABEL'

UPDATE PESSOA
SET NOME_PESSOA = LOWER(NOME_PESSOA)

SELECT *
FROM LOG

DROP TRIGGER UTR_PESSOA_INS, UTR_PESSOA_DEL, UTR_PESSOA_UPD

GO

CREATE TRIGGER UTR_PESSOA_INS_UPD_DEL
ON PESSOA
FOR INSERT, UPDATE, DELETE
AS
	IF NOT EXISTS(SELECT * FROM inserted)
	BEGIN 
		INSERT LOG (TABELA, ACAO, OBS)
		SELECT 'PESSOA', 
			'D', 
			CONCAT(ID_PESSOA, '|', NOME_PESSOA, '|', SEXO_PESSOA)
		FROM deleted
	END
	ELSE
		IF NOT EXISTS(SELECT * FROM deleted)
		BEGIN 
			INSERT LOG (TABELA, ACAO, OBS)
			SELECT 'PESSOA', 
				'I', 
				CONCAT(ID_PESSOA, '|', NOME_PESSOA, '|', SEXO_PESSOA)
			FROM inserted
		END
		ELSE		
			BEGIN
				INSERT LOG (TABELA, ACAO, OBS)
				SELECT 'PESSOA', 
					'U', 
					CONCAT(D.ID_PESSOA, '|', D.NOME_PESSOA, '->', I.NOME_PESSOA, '|', D.SEXO_PESSOA, '->', I.SEXO_PESSOA)
				FROM inserted I
				JOIN deleted D
					ON I.ID_PESSOA = D.ID_PESSOA
			END
GO

INSERT PESSOA
VALUES ('DERCY', 'F')

UPDATE PESSOA
SET NOME_PESSOA = UPPER(NOME_PESSOA)

DELETE PESSOA

SELECT * 
FROM LOG

SET STATISTICS XML ON

SELECT * 
FROM PESSOA

SET STATISTICS XML OFF

DBCC DROPCLEANBUFFERS
DBCC FREEPROCCACHE

SET STATISTICS IO ON

SELECT *
FROM PESSOA
WHERE ID_PESSOA = 1

SET STATISTICS IO OFF

DBCC DROPCLEANBUFFERS
DBCC FREEPROCCACHE

SET STATISTICS TIME ON

SELECT *
FROM PESSOA P1, PESSOA P2, PESSOA P3, PESSOA P4

SET STATISTICS TIME OFF

